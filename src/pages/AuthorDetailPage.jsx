import React, { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Header } from "../components/user/Header";
import { Footer } from "../components/user/Footer";
import { BookCard } from "../components/user/BookCard";
import { BookDetailModal } from "../components/user/BookDetailModal";

const AuthorDetailPage = () => {
  const { authorName } = useParams();
  const navigate = useNavigate();
  const [author, setAuthor] = useState(null);
  const [authorBooks, setAuthorBooks] = useState([]);
  const [loading, setLoading] = useState(true);
  const [showBookDetail, setShowBookDetail] = useState(false);
  const [selectedBook, setSelectedBook] = useState(null);

  // Mock data - in real app, this would come from API
  const mockAuthors = [
    {
      id: 1,
      name: "Nguy·ªÖn Nh·∫≠t √Ånh",
      age: 65,
      gender: "Nam",
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Crect width='200' height='200' fill='%23e0e7ff'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='24' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3ENN√Å%3C/text%3E%3C/svg%3E",
      description:
        "Nh√† vƒÉn n·ªïi ti·∫øng v·ªõi nhi·ªÅu t√°c ph·∫©m d√†nh cho thi·∫øu nhi v√† thanh thi·∫øu ni√™n. √îng ƒë∆∞·ª£c bi·∫øt ƒë·∫øn v·ªõi phong c√°ch vi·∫øt gi·∫£n d·ªã, g·∫ßn g≈©i v√† ƒë·∫ßy c·∫£m x√∫c.",
      booksCount: 25,
      joinDate: "2020-01-15",
    },
    {
      id: 2,
      name: "Dale Carnegie",
      age: 77,
      gender: "Nam",
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Crect width='200' height='200' fill='%23fef3c7'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='24' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3EDC%3C/text%3E%3C/svg%3E",
      description:
        "T√°c gi·∫£ c·ªßa cu·ªën s√°ch n·ªïi ti·∫øng 'ƒê·∫Øc Nh√¢n T√¢m' v√† nhi·ªÅu t√°c ph·∫©m v·ªÅ ph√°t tri·ªÉn b·∫£n th√¢n. √îng l√† m·ªôt trong nh·ªØng t√°c gi·∫£ c√≥ ·∫£nh h∆∞·ªüng l·ªõn nh·∫•t trong lƒ©nh v·ª±c t·ª± ph√°t tri·ªÉn.",
      booksCount: 12,
      joinDate: "2019-03-20",
    },
    {
      id: 3,
      name: "Paulo Coelho",
      age: 76,
      gender: "Nam",
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Crect width='200' height='200' fill='%23dcfce7'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='24' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3EPC%3C/text%3E%3C/svg%3E",
      description:
        "Nh√† vƒÉn Brazil n·ªïi ti·∫øng v·ªõi t√°c ph·∫©m 'Nh√† Gi·∫£ Kim' v√† nhi·ªÅu ti·ªÉu thuy·∫øt tri·∫øt l√Ω. T√°c ph·∫©m c·ªßa √¥ng ƒë√£ ƒë∆∞·ª£c d·ªãch ra h∆°n 80 ng√¥n ng·ªØ tr√™n th·∫ø gi·ªõi.",
      booksCount: 18,
      joinDate: "2019-07-10",
    },
    {
      id: 4,
      name: "Tony Bu·ªïi S√°ng",
      age: 45,
      gender: "Nam",
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Crect width='200' height='200' fill='%23fed7d7'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='20' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3ETBS%3C/text%3E%3C/svg%3E",
      description:
        "T√°c gi·∫£ c·ªßa nhi·ªÅu cu·ªën s√°ch v·ªÅ kinh doanh v√† ph√°t tri·ªÉn b·∫£n th√¢n. ƒê∆∞·ª£c bi·∫øt ƒë·∫øn v·ªõi phong c√°ch vi·∫øt th·ª±c t·∫ø v√† d·ªÖ hi·ªÉu.",
      booksCount: 15,
      joinDate: "2020-08-22",
    },
  ];

  // Mock books data
  const mockBooks = [
    {
      id: 1,
      title: "ƒê·∫Øc Nh√¢n T√¢m",
      author: "Dale Carnegie",
      price: 120000,
      oldPrice: 150000,
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='300' viewBox='0 0 200 300'%3E%3Crect width='200' height='300' fill='%23f8d775'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='18' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3Eƒê·∫Øc Nh√¢n T√¢m%3C/text%3E%3C/svg%3E",
      description: "Cu·ªën s√°ch kinh ƒëi·ªÉn v·ªÅ ngh·ªá thu·∫≠t giao ti·∫øp v√† ·ª©ng x·ª≠.",
      category: "kynang",
    },
    {
      id: 2,
      title: "Nh√† Gi·∫£ Kim",
      author: "Paulo Coelho",
      price: 79000,
      oldPrice: 99000,
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='300' viewBox='0 0 200 300'%3E%3Crect width='200' height='300' fill='%23a7f3d0'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='16' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3ENh√† Gi·∫£ Kim%3C/text%3E%3C/svg%3E",
      description:
        "C√¢u chuy·ªán v·ªÅ h√†nh tr√¨nh t√¨m ki·∫øm ∆∞·ªõc m∆° c·ªßa ch√†ng chƒÉn c·ª´u Santiago.",
      category: "vanhoc",
    },
    {
      id: 5,
      title: "C√† Ph√™ C√πng Tony",
      author: "Tony Bu·ªïi S√°ng",
      price: 90000,
      oldPrice: 120000,
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='300' viewBox='0 0 200 300'%3E%3Crect width='200' height='300' fill='%23fed7d7'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='14' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3EC√† Ph√™ C√πng Tony%3C/text%3E%3C/svg%3E",
      description: "Nh·ªØng chia s·∫ª v·ªÅ cu·ªôc s·ªëng v√† kinh doanh qua t√°ch c√† ph√™.",
      category: "kynang",
    },
    {
      id: 6,
      title: "T√¥i Th·∫•y Hoa V√†ng Tr√™n C·ªè Xanh",
      author: "Nguy·ªÖn Nh·∫≠t √Ånh",
      price: 85000,
      oldPrice: 110000,
      image:
        "data:image/svg+xml;charset=UTF-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='300' viewBox='0 0 200 300'%3E%3Crect width='200' height='300' fill='%23e0e7ff'/%3E%3Ctext x='50%' y='50%' font-family='Arial' font-size='12' text-anchor='middle' dominant-baseline='middle' fill='%23333'%3ET√¥i Th·∫•y Hoa V√†ng%3C/text%3E%3C/svg%3E",
      description: "T√°c ph·∫©m kinh ƒëi·ªÉn v·ªÅ tu·ªïi th∆° mi·ªÅn qu√™ Vi·ªát Nam.",
      category: "vanhoc",
    },
  ];

  useEffect(() => {
    const fetchAuthorData = async () => {
      setLoading(true);
      try {
        // Find author by name
        const foundAuthor = mockAuthors.find(
          (a) =>
            a.name.toLowerCase() ===
            decodeURIComponent(authorName).toLowerCase()
        );

        if (foundAuthor) {
          setAuthor(foundAuthor);

          // Get books by this author
          const books = mockBooks.filter(
            (book) =>
              book.author.toLowerCase() === foundAuthor.name.toLowerCase()
          );
          setAuthorBooks(books);
        }
      } catch (error) {
        console.error("Error fetching author data:", error);
      } finally {
        setLoading(false);
      }
    };

    if (authorName) {
      fetchAuthorData();
    }
  }, [authorName]);

  const handleBookClick = (book) => {
    setSelectedBook(book);
    setShowBookDetail(true);
  };

  const handleBackToHome = () => {
    navigate("/");
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">ƒêang t·∫£i th√¥ng tin t√°c gi·∫£...</p>
        </div>
      </div>
    );
  }

  if (!author) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl text-gray-400 mb-4">üìö</div>
          <h2 className="text-2xl font-bold text-gray-800 mb-2">
            Kh√¥ng t√¨m th·∫•y t√°c gi·∫£
          </h2>
          <p className="text-gray-600 mb-6">
            T√°c gi·∫£ "{decodeURIComponent(authorName)}" kh√¥ng t·ªìn t·∫°i trong h·ªá
            th·ªëng.
          </p>
          <button
            onClick={handleBackToHome}
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg transition duration-300"
          >
            <i className="fas fa-arrow-left mr-2"></i>
            Quay v·ªÅ trang ch·ªß
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />

      <main className="container mx-auto px-4 py-8">
        {/* Back Button */}
        <button
          onClick={handleBackToHome}
          className="mb-6 flex items-center text-blue-600 hover:text-blue-800 transition duration-300"
        >
          <i className="fas fa-arrow-left mr-2"></i>
          Quay v·ªÅ trang ch·ªß
        </button>

        {/* Author Profile Section */}
        <div className="bg-white rounded-lg shadow-md overflow-hidden mb-8">
          <div className="md:flex">
            <div className="md:w-1/3 p-8 bg-gradient-to-br from-blue-50 to-indigo-100">
              <div className="text-center">
                <img
                  src={author.image}
                  alt={author.name}
                  className="w-48 h-48 rounded-full mx-auto mb-6 shadow-lg object-cover"
                />
                <h1 className="text-3xl font-bold text-gray-800 mb-2">
                  {author.name}
                </h1>
                <div className="flex justify-center items-center space-x-4 mb-4">
                  <span
                    className={`px-3 py-1 rounded-full text-sm font-medium ${
                      author.gender === "Nam"
                        ? "bg-blue-100 text-blue-800"
                        : "bg-pink-100 text-pink-800"
                    }`}
                  >
                    {author.gender}
                  </span>
                  <span className="text-gray-600">
                    <i className="fas fa-birthday-cake mr-1"></i>
                    {author.age} tu·ªïi
                  </span>
                </div>
              </div>
            </div>

            <div className="md:w-2/3 p-8">
              <div className="mb-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4">
                  Gi·ªõi thi·ªáu v·ªÅ t√°c gi·∫£
                </h2>
                <p className="text-gray-600 leading-relaxed text-lg">
                  {author.description}
                </p>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="bg-blue-50 p-4 rounded-lg text-center">
                  <div className="text-3xl font-bold text-blue-600 mb-2">
                    {author.booksCount}
                  </div>
                  <div className="text-gray-600 text-sm">T√°c ph·∫©m</div>
                </div>

                <div className="bg-green-50 p-4 rounded-lg text-center">
                  <div className="text-3xl font-bold text-green-600 mb-2">
                    {authorBooks.length}
                  </div>
                  <div className="text-gray-600 text-sm">S√°ch c√≥ s·∫µn</div>
                </div>

                <div className="bg-purple-50 p-4 rounded-lg text-center">
                  <div className="text-3xl font-bold text-purple-600 mb-2">
                    {new Date(author.joinDate).getFullYear()}
                  </div>
                  <div className="text-gray-600 text-sm">NƒÉm tham gia</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Books Section */}
        <div className="bg-white rounded-lg shadow-md p-8">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold text-gray-800">
              S√°ch c·ªßa {author.name}
            </h2>
            <span className="text-gray-600">
              {authorBooks.length} cu·ªën s√°ch
            </span>
          </div>

          {authorBooks.length > 0 ? (
            <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6">
              {authorBooks.map((book) => (
                <BookCard
                  key={book.id}
                  book={book}
                  onClick={() => handleBookClick(book)}
                />
              ))}
            </div>
          ) : (
            <div className="text-center py-12">
              <div className="text-6xl text-gray-300 mb-4">üìñ</div>
              <h3 className="text-xl font-semibold text-gray-600 mb-2">
                Ch∆∞a c√≥ s√°ch n√†o
              </h3>
              <p className="text-gray-500">
                Hi·ªán t·∫°i ch∆∞a c√≥ s√°ch n√†o c·ªßa t√°c gi·∫£ n√†y trong c·ª≠a h√†ng.
              </p>
            </div>
          )}
        </div>
      </main>

      <Footer />

      {/* Book Detail Modal */}
      <BookDetailModal
        isOpen={showBookDetail}
        onClose={() => setShowBookDetail(false)}
        book={selectedBook}
      />
    </div>
  );
};

export default AuthorDetailPage;
